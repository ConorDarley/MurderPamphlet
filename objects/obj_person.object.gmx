<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_person</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()

image_index = irandom(image_number)
image_speed = 0

//Pick a random first name from a list
//Pick a random last name from a list
first = irandom(ds_list_size(global.Fnames)-1)
first = ds_list_find_value(global.Fnames, first)
last = irandom(ds_list_size(global.Lnames)-1)
last = ds_list_find_value(global.Lnames, last)

name = string(first) + " " + string(last)
ds_list_add(Names, name)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move = irandom(2)
if move == 0{
    speed = 3
} else if move == 1 {
    speed = 2
    direction += 15
} else if move == 2 {
    speed = 2
    direction -= 15
}

if x &lt; 0+32 or x &gt; 1024-32 or y &lt; 0+32 or y &gt; 768-32 {
    direction += 45
}

//move_wrap(true, false, sprite_width / 2);
//move_wrap(false, true, sprite_height / 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_set_halign(fa_center)
draw_set_font(ft_one)
draw_text(x,y+16,name)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set a to the length of the list of Names
len_names = ds_list_size(global.Names)// - 1
//For i in range(0,len(Names))
for (i = 0; i &lt; len_names; i += 1){
    //Sets check to the 'i'th item in the list
    check = ds_list_find_value(global.Names,i)
    //Checks if what I've typed can be found in the list, by checking each position with the for loop
    //if string_pos(check,keyboard_string) {
    if string_pos(name,keyboard_string) and check == name{
        //Checks which object is named with that name
        //if obj_person.name == check {
            with (id) {
                instance_create(x,y,obj_corpse)
                ds_list_delete(global.Names, i)
                keyboard_string = ""
                instance_destroy()
            }
        //}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
